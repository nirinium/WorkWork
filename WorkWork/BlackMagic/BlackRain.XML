<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlackRain</name>
    </assembly>
    <members>
        <member name="T:BlackRain.GUI.SelectProcess">
            <summary>
            Basic form to select a Wow process.
            </summary>
        </member>
        <member name="M:BlackRain.GUI.SelectProcess.#ctor">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="F:BlackRain.GUI.SelectProcess.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BlackRain.GUI.SelectProcess.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BlackRain.GUI.SelectProcess.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:BlackRain.Common.Objects.WowItem">
            <summary>
            An item.
            </summary>
        </member>
        <member name="T:BlackRain.Common.Objects.WowObject">
            <summary>
            An Object. Everything that inherits from WowObject, such as an item, is also an object.
            But an object is not necessarily an item.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.WowObject.#ctor(System.UInt32)">
            <summary>
            Instantiates a new WowObject.
            </summary>
            <param name="baseAddress">The Object's Base Address.</param>
        </member>
        <member name="M:BlackRain.Common.Objects.WowObject.GetStorageField``1(System.UInt32)">
            <summary>
            Gets the descriptor struct.
            </summary>
            <typeparam name="T">struct</typeparam>
            <param name="field">Descriptor field</param>
            <returns>Descriptor field</returns>
        </member>
        <member name="M:BlackRain.Common.Objects.WowObject.GetStorageField``1(BlackRain.Common.Offsets.WowObjectFields)">
            <summary>
            Gets the descriptor struct.
            Overload for when not casting uint.
            </summary>
            <typeparam name="T">struct</typeparam>
            <param name="field">Descriptor field</param>
            <returns>Descriptor field</returns>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.BaseAddress">
            <summary>
            The Base Address of the object.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.GUID">
            <summary>
            The object's GUID.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.Type">
            <summary>
            The object's Type.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.Entry">
            <summary>
            The object's Entry.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.Level">
            <summary>
            The object's level.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.X">
            <summary>
            Returns the object's X position.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.Y">
            <summary>
            Returns the object's Y position.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.Z">
            <summary>
            Returns the object's Z position.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.Facing">
            <summary>
            Returns the Facing orientation.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.IsMe">
            <summary>
            Determines if the unit is our local player.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.Scale_X">
            <summary>
            OBJECT_FIELD_SCALE_X
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowObject.Padding">
            <summary>
            The objects padding.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.WowItem.#ctor(System.UInt32)">
            <summary>
            Ctor.
            </summary>
            <param name="baseAddress"></param>
        </member>
        <member name="P:BlackRain.Common.Objects.WowItem.Durability">
            <summary>
            The item's remaining durability.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowItem.MaximumDurability">
            <summary>
            The item's maximum durability.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowItem.StackCount">
            <summary>
            The amount of items stacked.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowItem.Charges">
            <summary>
            The amount of charges this item has.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowItem.HasCharges">
            <summary>
            Does the item have charges?
            </summary>
        </member>
        <member name="T:BlackRain.Common.Objects.WowPlayerMe">
            <summary>
            Represents your player (character).
            </summary>
        </member>
        <member name="T:BlackRain.Common.Objects.WowPlayer">
            <summary>
            Represents a player.
            </summary>
        </member>
        <member name="T:BlackRain.Common.Objects.WowUnit">
            <summary>
            An unit, such as an NPC, but also a player.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.WowUnit.#ctor(System.UInt32)">
            <summary>
            Instantiates a new instance of the WowUnit object.
            </summary>
            <param name="baseAddress">The units base address.</param>
        </member>
        <member name="M:BlackRain.Common.Objects.WowUnit.HasFlag(BlackRain.Common.Offsets.UnitDynamicFlags)">
            <summary>
            Does the unit have this flag?
            </summary>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.DynamicFlags">
            <summary>
            Returns the Dynamic Flags.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.UnitFlags">
            <summary>
            Returns the Unit Flags.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Critter">
            <summary>
            Is this unit a critter?
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.IsUnit">
            <summary>
            Returns whether the unit is a unit.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.IsPlayer">
            <summary>
            Returns whether the unit is a Player.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.CharmedBy">
            <summary>
            The GUID of the object this unit is charmed by.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.SummonedBy">
            <summary>
            The GUID of the object this unit is summoned by.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.CreatedBy">
            <summary>
            The GUID of the object this unit was created by.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Health">
            <summary>
            The unit's health.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.MaximumHealth">
            <summary>
            The unit's maximum health.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.HealthPercentage">
            <summary>
            The unit's health as a percentage of its total.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.ManaPercentage">
            <summary>
            The unit's mana as a percentage of its total.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.BaseHealth">
            <summary>
            The unit's base health.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.BaseMana">
            <summary>
            The unit's base health.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Mana">
            <summary>
            The unit's mana.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Rage">
            <summary>
            The unit's rage.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Focus">
            <summary>
            The unit's focus.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Energy">
            <summary>
            The unit's energy.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Happinnes">
            <summary>
            The unit's happinnes.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.RunicPower">
            <summary>
            The unit's runic power.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Runes">
            <summary>
            The unit's runes.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.MaximumMana">
            <summary>
            The unit's maximum mana.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.MaximumRage">
            <summary>
            The unit's maximum rage.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.MaximumFocus">
            <summary>
            The unit's maximum focus.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.MaximumEnergy">
            <summary>
            The unit's maximum energy.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.MaximumRunicPower">
            <summary>
            The unit's maximum runic power.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.MaximumRunes">
            <summary>
            The unit's maximum runes.
            <!-- This is presumably always 6, two blood, two frost, two unholy. But may be different on DK based bosses/mobs? -->
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Level">
            <summary>
            The unit's level.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Name">
            <summary>
            The name of the unit.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.DisplayID">
            <summary>
            The unit's DisplayID.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.MountDisplayID">
            <summary>
            The mount display of the mount the unit is mounted on.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Target">
            <summary>
            The GUID of the object this unit is targeting.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Dead">
            <summary>
            Determines if the unit is dead.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Lootable">
            <summary>
            Is the unit lootable?
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Location">
            <summary>
            The <see cref="T:BlackRain.Common.Point"/> location of the unit.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Distance">
            <summary>
            The distance.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Race">
            <summary>
            Gets the race of the unit.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowUnit.Class">
            <summary>
            Gets the class of the unit.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.WowPlayer.#ctor(System.UInt32)">
            <summary>
            Ctor
            </summary>
            <param name="baseAddress"></param>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayer.Experience">
            <summary>
            The player's experience points.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayer.NextLevel">
            <summary>
            The experience the player requires to advance to the next level.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayer.GuildID">
            <summary>
            The ID of the guild the player resides in.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayer.RestExperience">
            <summary>
            The amount of experience the player has rested.
            <!-- You can calculate the double experience rate, and thus shorten the time to the next level when using this in a calculation. -->
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayer.Ghost">
            <summary>
            Determines if the player is a Ghost. i.e: dead, and released from corpse.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayer.Combat">
            <summary>
            Returns true if in combat, false if not.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayer.Name">
            <summary>
            The name of the player.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayer.Mounted">
            <summary>
            Returns true if the unit is mounted, false if not.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.WowPlayerMe.#ctor(System.UInt32)">
            <summary>
            Ctor
            </summary>
            <param name="baseAddress"></param>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayerMe.Zone">
            <summary>
            Your character's current Zone.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayerMe.SubZone">
            <summary>
            Your character's current SubZone.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayerMe.Copper">
            <summary>
            Your character's money.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayerMe.Silver">
            <summary>
            Gets the silver.
            </summary>
            <value>The silver.</value>
            19/10/2010 17:57
        </member>
        <member name="P:BlackRain.Common.Objects.WowPlayerMe.Gold">
            <summary>
            Gets the gold.
            </summary>
            <value>The gold.</value>
            19/10/2010 17:57
        </member>
        <member name="T:BlackRain.Common.Objects.WowContainer">
            <summary>
            Contains information about WowContainers.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.WowContainer.#ctor(System.UInt32)">
            <summary>
            Ctor
            </summary>
            <param name="baseAddress"></param>
        </member>
        <member name="P:BlackRain.Common.Objects.WowContainer.Slots">
            <summary>
            The amount of slots this container has.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowContainer.InSlot">
            <summary>
            The slot this container occupies on the character.
            </summary>
        </member>
        <member name="T:BlackRain.Common.Utilities">
            <summary>
            A class with utilities that can be used.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Utilities.ApplicationPath">
            <summary>
            Gets the application path.
            <value>The application path.</value>
            </summary>
        </member>
        <member name="P:BlackRain.Common.Utilities.Version">
            <summary>
            Gets the application version.
            </summary>
        </member>
        <member name="T:BlackRain.Common.Objects.WowDynamicObject">
            <summary>
            A Dynamic Object, such as Death and Decay.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.WowDynamicObject.#ctor(System.UInt32)">
            <summary>
            Ctor.
            </summary>
            <param name="baseAddress"></param>
        </member>
        <member name="P:BlackRain.Common.Objects.WowDynamicObject.Caster">
            <summary>
            The GUID of the DynamicObject's caster.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowDynamicObject.SpellID">
            <summary>
            The ID of the spell of which the DynamicObject consists.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowDynamicObject.Radius">
            <summary>
            The radius of the dynamic object.
            </summary>
        </member>
        <member name="T:BlackRain.Common.Objects.WowCorpse">
            <summary>
            Player corpses.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.WowCorpse.#ctor(System.UInt32)">
            <summary>
            Ctor.
            </summary>
            <param name="baseAddress"></param>
        </member>
        <member name="P:BlackRain.Common.Objects.WowCorpse.Owner">
            <summary>
            The corpse's owner.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowCorpse.DisplayID">
            <summary>
            The Corpses Display ID.
            </summary>
        </member>
        <member name="T:BlackRain.Common.Offsets">
            <summary>
            A collection of offsets used for memory reading and writing.
            </summary>
        </member>
        <member name="T:BlackRain.Common.Offsets.WowPlayer">
            <summary>
            Memory locations specific to the WowPlayer type.
            </summary>
        </member>
        <member name="T:BlackRain.Common.Offsets.ObjectManager">
            <summary>
            Memory locations specific to the ObjectManager.
            Version: 4.0.6 13623
            </summary>
        </member>
        <member name="T:BlackRain.Common.Offsets.WowPlayerMe">
            <summary>
            Memory locations specific to the WowPlayerMe type.
            Version: 4.0.6 13623
            </summary>
        </member>
        <member name="T:BlackRain.Common.Offsets.WowObject">
            <summary>
            Memory locations specific to the WowObject type.
            Version: 4.0.6 13623
            </summary>
        </member>
        <member name="T:BlackRain.Common.Offsets.WowGameObject">
            <summary>
            Memory locations specific to the WowGameObject type.
            </summary>
        </member>
        <member name="T:BlackRain.GUI.Log">
            <summary>
            A generic UI item used to display logs.
            </summary>
        </member>
        <member name="F:BlackRain.GUI.Log.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BlackRain.GUI.Log.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BlackRain.GUI.Log.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:BlackRain.GUI.Log.#ctor">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:BlackRain.GUI.Log.AppendMessage(System.Windows.Forms.RichTextBox,System.String,System.Drawing.Color)">
            <summary>
            Writes a message to the specified RichTextBox.
            </summary>
            <param name="textBox"></param>
            <param name="message">The <see cref="T:System.String">message</see> to be written.</param>
            <param name="col"></param>
        </member>
        <member name="T:BlackRain.Common.Logging">
            <summary>
            This class handles all logging done for OpenBot. From simple output, to writing to files, to logging exceptions
            and user messages. It is event based, and thread safe.
            </summary>
            <example>Logging.WriteDebug("Oh noes! We failed again!");</example>
            1/14/2009 7:31 PM
        </member>
        <member name="M:BlackRain.Common.Logging.Write(System.String,System.Object[])">
            <summary>
            Writes the specified message to the message queue.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
            1/14/2009 7:33 PM
        </member>
        <member name="M:BlackRain.Common.Logging.Write(System.Drawing.Color,System.String,System.Object[])">
            <summary>
            Writes the specified message to the message queue.
            </summary>
            <param name="color">The color to write the message in.</param>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
            1/14/2009 7:33 PM
        </member>
        <member name="M:BlackRain.Common.Logging.WriteDebug(System.String,System.Object[])">
            <summary>
            Writes the specified debug message to the message queue. [Default Color: Red]
            Debug messages are not shown to the end user by default. (They can be turned on via settings)
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
            1/14/2009 7:40 PM
        </member>
        <member name="M:BlackRain.Common.Logging.WriteDebug(System.Drawing.Color,System.String,System.Object[])">
            <summary>
            Writes the debug message in the specific color.
            Debug messages are not shown to the end user by default. (They can be turned on via settings)
            </summary>
            <param name="color">The color to write in.</param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:BlackRain.Common.Logging.WriteException(System.Exception)">
            <summary>
            Writes the specified exception to the message queue. [Default Color: Red]
            Debug messages are not shown to the end user by default. (They can be turned on via settings)
            </summary>
            <param name="ex">The exception that will be logged.</param>
        </member>
        <member name="M:BlackRain.Common.Logging.WriteException(System.Drawing.Color,System.Exception)">
            <summary>
            Writes the specified exception to the message queue.
            Debug messages are not shown to the end user by default. (They can be turned on via settings)
            </summary>
            <param name="color">The color to write the message in.</param>
            <param name="ex">The exception that will be logged.</param>
        </member>
        <member name="M:BlackRain.Common.Logging.LogMessage(System.String,System.Object[])">
            <summary>
            Logs the specified message to the logging queue. This will not fire any
            message events. It will go straight to the log file without question.
            </summary>
            <param name="format">The format param of string.Format</param>
            <param name="args">The args param of string.Format</param>
        </member>
        <member name="M:BlackRain.Common.Logging.LogException(System.Exception)">
            <summary>
            Logs the specified exception into the log queue.
            </summary>
            <param name="ex">The exception to be logged.</param>
        </member>
        <member name="P:BlackRain.Common.Logging.LogOnWrite">
            <summary>
            Gets or sets a value indicating whether every Write action should also be logged.
            </summary>
            <value><c>true</c> if [log on write]; otherwise, <c>false</c>.</value>
            1/14/2009 7:40 PM
        </member>
        <member name="E:BlackRain.Common.Logging.OnWrite">
            <summary>
            Occurs when [on write].
            </summary>
        </member>
        <member name="E:BlackRain.Common.Logging.OnDebug">
            <summary>
            Occurs when [on debug].
            </summary>
        </member>
        <member name="T:BlackRain.Common.Logging.DebugDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:BlackRain.Common.Logging.WriteDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="T:BlackRain.Common.Objects.WowGameObject">
            <summary>
            A Game Object, such as a herb, but also a treasure box.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.WowGameObject.#ctor(System.UInt32)">
            <summary>
            Ctor.
            </summary>
            <param name="baseAddress"></param>
        </member>
        <member name="P:BlackRain.Common.Objects.WowGameObject.DisplayID">
            <summary>
            The GameObject's Display ID.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowGameObject.Faction">
            <summary>
            The GameObject's faction.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowGameObject.Level">
            <summary>
            The GameObject's level.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowGameObject.CreatedBy">
            <summary>
            The GUID of the object this object was created by.
            <!-- Presumably, hasn't been double-checked. -->
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowGameObject.Name">
            <summary>
            Returns the object's name.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowGameObject.X">
            <summary>
            Returns the GameObject's X position.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowGameObject.Y">
            <summary>
            Returns the GameObject's Y position.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowGameObject.Z">
            <summary>
            Returns the GameObject's Z position.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowGameObject.Location">
            <summary>
            Returns the <see cref="T:BlackRain.Common.Point">Point</see> location of the Game Object.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.WowGameObject.Distance">
            <summary>
            The distance.
            </summary>
        </member>
        <member name="T:BlackRain.Common.Objects.ObjectManager">
            <summary>
            Manages all the BlackRain WowObjects, and maintains them.
            </summary>
        </member>
        <member name="F:BlackRain.Common.Objects.ObjectManager.objPulse">
            <summary>
            To prevent thread racing scenarios.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.ObjectManager.MakeAbsolute(System.UInt32)">
            <summary>
            Makes the address absolute.
            </summary>
            <param name="relativeAddress">The relative address.</param>
            <returns></returns>
            19/10/2010 17:33
        </member>
        <member name="F:BlackRain.Common.Objects.ObjectManager.Objects">
            <summary>
            A list of all Objects.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.ObjectManager.Initialize(System.Diagnostics.Process)">
            <summary>
            Initialized the ObjectManager, and attaches it to the selected process ID.
            </summary>
            <param name="wowProc">The wow proc.</param>
        </member>
        <member name="M:BlackRain.Common.Objects.ObjectManager.Initialize(System.Int32)">
            <summary>
            Initialized the ObjectManager, and attaches it to the selected process ID.
            </summary>
            <param name="pid">The process id.</param>
            19/10/2010 17:40
        </member>
        <member name="M:BlackRain.Common.Objects.ObjectManager.Pulse">
            <summary>
            Pulses the ObjectManager, refreshing any objects it holds.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Objects.ObjectManager.ReadRelative``1(System.UInt32)">
            <summary>
            Reads the relative memory at the specified address.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="address">The address.</param>
            <returns></returns>
            16/10/2010 16:38
        </member>
        <member name="M:BlackRain.Common.Objects.ObjectManager.Read``1(System.UInt32)">
            <summary>
            Reads the memory at the specified address.
            </summary>
            <typeparam name="T">The type of data to be read.</typeparam>
            <param name="address">The memory location.</param>
            <returns>(T) value</returns>
        </member>
        <member name="M:BlackRain.Common.Objects.ObjectManager.Write``1(System.UInt32,``0)">
            <summary>
            Writes the value of type T to the specified address.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="address">The address.</param>
            <param name="value">The value.</param>
            <returns></returns>
            19/10/2010 17:44
        </member>
        <member name="M:BlackRain.Common.Objects.ObjectManager.ObjectsOfType``1">
            <summary>
            Returns all objects of type T.
            </summary>
            <typeparam name="T">The type of object.</typeparam>
            <returns></returns>
        </member>
        <member name="M:BlackRain.Common.Objects.ObjectManager.GetObjectsOfType``1(System.Boolean,System.Boolean)">
            <summary>
            Gets object of the specified type. 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="allowInheritance">Indicates whether to also get objects that derives from the specified type (ie. WowPlayer derives from WoWUnit, so specifying WoWUnit and true would also return all players).</param>
            <param name="includeMeIfFound">Indicates whether to include the local player.</param>
            <returns></returns>
        </member>
        <member name="P:BlackRain.Common.Objects.ObjectManager.WowBaseAddress">
            <summary>
            Gets the wow base address.
            </summary>
            <value>The wow base address.</value>
            19/10/2010 17:30
        </member>
        <member name="P:BlackRain.Common.Objects.ObjectManager.Memory">
            <summary>
            The instance of BlackMagic used for World of Warcraft memory editing.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.ObjectManager.Initialized">
            <summary>
            Is the ObjectManager initialized?
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.ObjectManager.Corpses">
            <summary>
            A list of all Corpses.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.ObjectManager.Units">
            <summary>
            A list of all units.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.ObjectManager.GameObjects">
            <summary>
            A list of all Game Objects.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.ObjectManager.Me">
            <summary>
            The local player.
            </summary>
        </member>
        <member name="P:BlackRain.Common.Objects.ObjectManager.PlayerGUID">
            <summary>
            The local player's GUID.
            </summary>
        </member>
        <member name="T:BlackRain.Common.Point">
            <summary>
            A basic Point class. This provides a wrapper around the common Point type operations.
            </summary>
            1/15/2009 12:15 AM
        </member>
        <member name="M:BlackRain.Common.Point.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlackRain.Common.Point"/> class.
            </summary>
        </member>
        <member name="M:BlackRain.Common.Point.#ctor(BlackRain.Common.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackRain.Common.Point"/> class.
            </summary>
            <param name="pt">The pt.</param>
        </member>
        <member name="M:BlackRain.Common.Point.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackRain.Common.Point"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:BlackRain.Common.Point.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackRain.Common.Point"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
        </member>
        <member name="M:BlackRain.Common.Point.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:BlackRain.Common.Point"/> class using Xml as a source.
            </summary>
            <param name="xml"></param>
        </member>
        <member name="M:BlackRain.Common.Point.Distance(System.Single,System.Single,System.Single)">
            <summary>
            Gets the distance to the specified location.
            </summary>
            <param name="toX">To X.</param>
            <param name="toY">To Y.</param>
            <param name="toZ">To Z.</param>
            <returns></returns>
        </member>
        <member name="M:BlackRain.Common.Point.Distance(BlackRain.Common.Point)">
            <summary>
            Gets the distance to the specified Point.
            </summary>
            <param name="pt">The point.</param>
            <returns></returns>
        </member>
        <member name="M:BlackRain.Common.Point.Distance(BlackRain.Common.Point,BlackRain.Common.Point)">
            <summary>
            Returns the distance between two points.
            </summary>
            <param name="ptA">The pt A.</param>
            <param name="ptB">The pt B.</param>
            <returns></returns>
        </member>
        <member name="M:BlackRain.Common.Point.Distance(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns the distance between two points.
            </summary>
            <param name="fromX">From X.</param>
            <param name="fromY">From Y.</param>
            <param name="fromZ">From Z.</param>
            <param name="toX">To X.</param>
            <param name="toY">To Y.</param>
            <param name="toZ">To Z.</param>
            <returns></returns>
        </member>
        <member name="M:BlackRain.Common.Point.HeightDiffAbs(System.Single)">
            <summary>
            Gets the height difference.
            </summary>
            <param name="toZ">To Z.</param>
            <returns></returns>
        </member>
        <member name="M:BlackRain.Common.Point.HeightDiff(System.Single)">
            <summary>
            Gets the height difference.
            </summary>
            <param name="toZ">To Z.</param>
            <returns></returns>
            1/26/2009 4:04 PM
        </member>
        <member name="M:BlackRain.Common.Point.FlatDistance(System.Single,System.Single)">
            <summary>
            Gets the flat distance. (Ignores Z value)
            </summary>
            <param name="toX">To X.</param>
            <param name="toY">To Y.</param>
            <returns></returns>
        </member>
        <member name="M:BlackRain.Common.Point.GetXml">
            <summary>
            Gets the XML format for the <see cref="T:BlackRain.Common.Point">Point</see>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlackRain.Common.Point.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="obj"/> is not the same type as this instance. </exception>
            1/15/2009 12:15 AM
        </member>
        <member name="M:BlackRain.Common.Point.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:BlackRain.Common.Point.Equals(BlackRain.Common.Point)">
            <summary>
            Determines whether the specified <see cref="T:BlackRain.Common.Point"/> is equal to the current <see cref="T:BlackRain.Common.Point"/>.
            </summary>
            <param name="pt">The <see cref="T:BlackRain.Common.Point"/> to compare with the current <see cref="T:BlackRain.Common.Point"/>.</param>
            <returns>
            true if the specified <see cref="T:BlackRain.Common.Point"/> is equal to the current <see cref="T:BlackRain.Common.Point"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:BlackRain.Common.Point.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:BlackRain.Common.Point.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:BlackRain.Common.Point.op_LessThan(BlackRain.Common.Point,BlackRain.Common.Point)">
            <summary>
            Implements the operator &lt;.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <returns>The result of the operator.</returns>
            1/15/2009 12:14 AM
        </member>
        <member name="M:BlackRain.Common.Point.op_GreaterThan(BlackRain.Common.Point,BlackRain.Common.Point)">
            <summary>
            Implements the operator &gt;.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <returns>The result of the operator.</returns>
            1/15/2009 12:15 AM
        </member>
        <member name="M:BlackRain.Common.Point.op_LessThanOrEqual(BlackRain.Common.Point,BlackRain.Common.Point)">
            <summary>
            Implements the operator &lt;=.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <returns>The result of the operator.</returns>
            1/15/2009 12:15 AM
        </member>
        <member name="M:BlackRain.Common.Point.op_GreaterThanOrEqual(BlackRain.Common.Point,BlackRain.Common.Point)">
            <summary>
            Implements the operator &gt;=.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <returns>The result of the operator.</returns>
            1/15/2009 12:15 AM
        </member>
        <member name="M:BlackRain.Common.Point.op_Multiply(BlackRain.Common.Point,BlackRain.Common.Point)">
            <summary>
            Implements the operator *.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
            1/15/2009 12:15 AM
        </member>
        <member name="M:BlackRain.Common.Point.op_Addition(BlackRain.Common.Point,BlackRain.Common.Point)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
            1/15/2009 12:15 AM
        </member>
        <member name="M:BlackRain.Common.Point.op_Subtraction(BlackRain.Common.Point,BlackRain.Common.Point)">
            <summary>
            Implements the operator -.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
            1/15/2009 12:15 AM
        </member>
        <member name="M:BlackRain.Common.Point.op_Multiply(BlackRain.Common.Point,System.Single)">
            <summary>
            Implements the operator *.
            </summary>
            <param name="a">A.</param>
            <param name="d">The d.</param>
            <returns>The result of the operator.</returns>
            1/15/2009 12:15 AM
        </member>
        <member name="M:BlackRain.Common.Point.op_Equality(BlackRain.Common.Point,BlackRain.Common.Point)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="ptA">The pt A.</param>
            <param name="ptB">The pt B.</param>
            <returns>The result of the operator.</returns>
            1/15/2009 12:15 AM
        </member>
        <member name="M:BlackRain.Common.Point.op_Inequality(BlackRain.Common.Point,BlackRain.Common.Point)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="ptA">The pt A.</param>
            <param name="ptB">The pt B.</param>
            <returns>The result of the operator.</returns>
            1/15/2009 12:15 AM
        </member>
        <member name="P:BlackRain.Common.Point.X">
            <summary>
            Gets or sets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:BlackRain.Common.Point.Y">
            <summary>
            Gets or sets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:BlackRain.Common.Point.Z">
            <summary>
            Gets or sets the Z.
            </summary>
            <value>The Z.</value>
        </member>
        <member name="P:BlackRain.Common.Point.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
    </members>
</doc>
